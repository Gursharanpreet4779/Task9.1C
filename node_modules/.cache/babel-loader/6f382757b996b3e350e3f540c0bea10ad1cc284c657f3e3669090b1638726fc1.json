{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCi1P23C2JinaVF-Z4J-sBNfYdwhQSCe44\",\n  authDomain: \"webapp-63662.firebaseapp.com\",\n  projectId: \"webapp-63662\",\n  storageBucket: \"webapp-63662.appspot.com\",\n  messagingSenderId: \"807336420695\",\n  appId: \"1:807336420695:web:7c49cab69d0bc4ac470a12\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocFromAuth = async (userAuth, additionalInformation = {}) => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error in creating ', error.message);\n    }\n  }\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signinAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message","createAuthUserWithEmailAndPassword","password","signinAuthUserWithEmailAndPassword"],"sources":["/Users/gurisidhu25/Documents/uni/sit313/task9.1c/Task9.1C/src/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth'\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCi1P23C2JinaVF-Z4J-sBNfYdwhQSCe44\",\n  authDomain: \"webapp-63662.firebaseapp.com\",\n  projectId: \"webapp-63662\",\n  storageBucket: \"webapp-63662.appspot.com\",\n  messagingSenderId: \"807336420695\",\n  appId: \"1:807336420695:web:7c49cab69d0bc4ac470a12\"\n  };\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst provider = new GoogleAuthProvider();\n\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const db = getFirestore();\n\nexport const createUserDocFromAuth = async (userAuth, additionalInformation = {}) => {\n  if (!userAuth) return;\n\n  const userDocRef = doc(db, 'users', userAuth.uid);\n\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      })\n    }\n    catch (error) {\n      console.log('error in creating ', error.message)\n    }\n  }\n\n  return userDocRef;\n}\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password)\n}\n\nexport const signinAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password)\n}"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,8BAA8B,EAAEC,0BAA0B,QAAQ,eAAe;AACxI,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AAEtE,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,8BAA8B;EAC1CC,SAAS,EAAE,cAAc;EACzBC,aAAa,EAAE,0BAA0B;EACzCC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACP,CAAC;;AAEH;AACA,MAAMC,WAAW,GAAGjB,aAAa,CAACU,cAAc,CAAC;AAEjD,MAAMQ,QAAQ,GAAG,IAAIf,kBAAkB,CAAC,CAAC;AAEzCe,QAAQ,CAACC,mBAAmB,CAAC;EAC3BC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,OAAO,MAAMC,IAAI,GAAGpB,OAAO,CAAC,CAAC;AAC7B,OAAO,MAAMqB,qBAAqB,GAAGA,CAAA,KAAMpB,eAAe,CAACmB,IAAI,EAAEH,QAAQ,CAAC;AAC1E,OAAO,MAAMK,EAAE,GAAGjB,YAAY,CAAC,CAAC;AAEhC,OAAO,MAAMkB,qBAAqB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,qBAAqB,GAAG,CAAC,CAAC,KAAK;EACnF,IAAI,CAACD,QAAQ,EAAE;EAEf,MAAME,UAAU,GAAGpB,GAAG,CAACgB,EAAE,EAAE,OAAO,EAAEE,QAAQ,CAACG,GAAG,CAAC;EAEjD,MAAMC,YAAY,GAAG,MAAMrB,MAAM,CAACmB,UAAU,CAAC;EAE7C,IAAI,CAACE,YAAY,CAACC,MAAM,CAAC,CAAC,EAAE;IAC1B,MAAM;MAAEC,WAAW;MAAEC;IAAM,CAAC,GAAGP,QAAQ;IACvC,MAAMQ,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAE5B,IAAI;MACF,MAAMzB,MAAM,CAACkB,UAAU,EAAE;QACvBI,WAAW;QACXC,KAAK;QACLC,SAAS;QACT,GAAGP;MACL,CAAC,CAAC;IACJ,CAAC,CACD,OAAOS,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,KAAK,CAACG,OAAO,CAAC;IAClD;EACF;EAEA,OAAOX,UAAU;AACnB,CAAC;AAED,OAAO,MAAMY,kCAAkC,GAAG,MAAAA,CAAOP,KAAK,EAAEQ,QAAQ,KAAK;EAC3E,IAAI,CAACR,KAAK,IAAI,CAACQ,QAAQ,EAAE;EACzB,OAAO,MAAMpC,8BAA8B,CAACiB,IAAI,EAAEW,KAAK,EAAEQ,QAAQ,CAAC;AACpE,CAAC;AAED,OAAO,MAAMC,kCAAkC,GAAG,MAAAA,CAAOT,KAAK,EAAEQ,QAAQ,KAAK;EAC3E,IAAI,CAACR,KAAK,IAAI,CAACQ,QAAQ,EAAE;EACzB,OAAO,MAAMnC,0BAA0B,CAACgB,IAAI,EAAEW,KAAK,EAAEQ,QAAQ,CAAC;AAChE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}